/*
 * Copyright (C) 2014 Actions Semi. Inc
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation version 2.
 *
 * This program is distributed "as is" WITHOUT ANY WARRANTY of any
 * kind, whether express or implied; without even the implied warranty
 * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

/dts-v1/;

/* reserve 48MB for logo(fb) */
/memreserve/ 0x19000000 0x03000000;

/* reserve 512MB for ion1(pmem) */
/memreserve/ 0x20000000 0x20000000;

/* reserve above 3.5G ddr space for system use only, can not be used by dma */
/memreserve/ 0x1E0000000 0x20000000;

/* reserve 4k for afinfo */
/memreserve/ 0x18FFF000 0x1000;

#include "s900.dtsi"

/ {
	model = "s900";
	compatible = "actions,s900", "actions,s900-evb";

	chosen {
		bootargs="fb_logo_reserve=0x19000000,0x03000000 console=ttyS5,115200 earlyprintk=serial-owl,0xe012a000 no_console_suspend loglevel=4";
	};

	memory@00000000 {
		device_type = "memory";
		reg = <0 0x00000000 0 0x20000000>;
	};

	ion_config {
		compatible = "actions,s900-ion";
		actions,ion_heap_pmem_base = <0x0 0x20000000>;
		actions,ion_heap_pmem_size = <0x0 0x20000000>;
		/* reserve above 3.5G ddr space for system use only, can not be used by dma */
		actions,ion_reserved_base = <0x1 0xE0000000>;
		actions,ion_reserved_size = <0x0 0x20000000>;
	};

	gpiod: gpiod@e01b0000 {
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_gpio_lvds_o>;
	};

	pinctrl@e01b0000 {
		pinctrl_i2c4: i2c4 {
			i2c4_mfp {
				actions,groups = "mfp3_8";
				actions,function = "i2c4";
			};

			i2c4_pull {
				actions,pins = "P_UART4_RX", "P_UART4_TX";
				actions,pull = <2>;
			};
		};
		pinctrl_i2c5: i2c5 {
			i2c5_mfp {
				actions,groups = "mfp3_21_19", "mfp2_2_0";
				actions,function = "i2c5";
			};

			i2c5_pull {
				actions,pins = "P_UART0_TX", "P_UART0_RX";
				actions,pull = <2>;
			};
		};
		pinctrl_i2c3: i2c3 {
			i2c3_mfp {
				actions,groups = "mfp1_5_4";
				actions,function = "i2c3";
			};

			i2c3_pull {
				actions,pins = "P_SPI0_SCLK", "P_SPI0_MOSI";
				actions,pull = <2>;
			};
		};
	};


	mmc0: mmc@e0338000 {
		card-type = "emmc";
		status = "okay";
	};

	mmc1: mmc@e033c000 {
		card-type = "emmc";
		status = "okay";
	};

	mmc2: mmc@e0334000 {
		card-type = "wifi";
		wifi-card-voltage = "1.8v";  /* only: "1.8v", "3.1v" */
		status = "okay";
	};

	mmc3: mmc@e0330000 {
		card-type = "memory";  /* only: "memory", "wifi", or "emmc" */
		card-detect-mode = "gpio";  /* only: "sirq", "gpio", or "command" */
		cd-gpios = <&gpiob 10 0>; /* GPIOB10 */
		sd_vcc = "ldo0";
		status = "okay";
	};

	i2c0: i2c@e0170000 {
		clock-frequency = <100000>;
		status = "okay";
		hdmi_read_edid@60 {
			compatible = "actions,hdmi_read_edid";
			reg = <0x60>;
		};
	};

	i2c2: i2c@e0174000 {
		status = "okay";

		eta355c: eta355c-regulator {
			compatible = "eta,eta355c-regulator";
			reg = <0x60>;

			regulator-name = "eta355c";
			regulator-type = "voltage";
			regulator-min-microvolt = <700000>;
			regulator-max-microvolt = <1050000>;
			startup-delay-us = <1000>;	/* us */
			regulator-ramp-delay = <250>;	/* uV/us */
			enable-gpio = <&gpiod 3 0x4>;	/* GPIOD3 */
			enable-active-high;
		};
	};

	i2c3: i2c@e0176000 {
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_i2c3>;
		status = "okay";
		/* atc2609a (5303) */
		atc260x: atc2609a@65 {
			compatible = "actions,atc2609a","actions,atc260x";
			reg = <0x65>;
			interrupt-parent = <&sirq>;
			interrupts = <2>;
			interrupt-controller;
			#interrupt-cells = <1>;

			losc_32k_output_enable = <1>;    /* enable/disable output 32.768K clock via AUXIN1 pin */

			pm {
				compatible = "actions,atc2609a-pm";
			};

			onoff {
				compatible = "actions,atc2609a-onoff";
			};

			rtc{
				compatible = "actions,atc2609a-rtc";
			};

			atc260x_gpio{
				compatible = "actions,atc2609a-gpio";
			};

			/*the cfg params must be read	in the first installed ko,
			 now snd-soc-atv5302.ko is first installed.
			 1, earphone_detect_level use the third value of earphone_gpios
			 2, commonly, we shouldn't change the value of speaker_gain and earphone_gain*/

			atc260x-audio{
				compatible = "actions,atc2609a-audio";
				status = "okay";
                                pinctrl-names = "default";
                                pinctrl-0 = <&i2s0_state_default>;
				clocks = <&clock CLK_AUDIO_PLL>, <&clock CLK_HDMI_AUDIO>;
				clock-names = "audio_pll", "hdmia";
				speaker_en_gpios = <&gpioa 19 1>; /*hr280ac GPIOA(19) 0: high, 1: low*/
				earphone_output_mode = <0>; /*0: direct mode, 1: undirect mode*/
				mic_num = <1>; /*just suport 1, 2*/
				mic0_gain = < 0x7 0x7 >; /*<Lchannel,Rchannel> [0x0~0xF]*/
				speaker_gain = < 0xaa 0xaa >; /*<Lchannel,Rchannel>[0x00~0xbebe]*/
				earphone_gain = < 0xbe 0xbe >; /*<Lchannel,Rchannel>[0x00~0xbebe]*/
				speaker_volume = < 0x28 0x28 >; /*volume [0x00~0x28]*/
				earphone_volume = < 0x28 0x28 >; /*volume [0x00~0x28]*/
				earphone_detect_mode = <0>;  /*0: polling,   1: interrupt*/
			};

			atc260x-hwmon{
				compatible = "actions,atc2609a-hwmon";
			};

			atc260x-charger{
				compatible = "actions,atc2609a-charger";
				rsense = <10>;/*unit:mohm*/
				bat_type = <3>;/*0:4.18v; 1:4.2v; 2:4.3v; 3:4.35v*/
				bl_on_current_usb_pc = <300>;
				bl_off_current_usb_pc = <500>;
				bl_on_current_usb_adp = <300>;
				bl_off_current_usb_adp = <800>;
				bl_on_current_wall_adp = <300>;
				bl_off_current_wall_adp = <1500>;
				wall_switch = <&gpioa 3 1>;/*GPIOA3,0: high, 1: low*/
				support_adaptor_type = <2>; /*1: DCIN  2: USB  3:DCIN+USB*/
				ext_charger = <0>;
				usb_adapter_as_ac = <1>;/*0:usb ada keep itself; 1:usb ada used as DCIN when usb plug and batv<3.3v during minicharge*/
				usb_pc_ctl_mode = <2>; /*0:disable vbus ctl;1:current limited;2:voltage limited*/
			};

			/* DCDC0       VDD_CORE
			 * DCDC1       VDD_CPU
			 * DCDC2       VDDR
			 * DCDC3       VCC
			 * DCDC4       VDD_CPUM
			 */
			dcdc0: dcdc0 {
				compatible = "actions,atc2609a-dcdc0","actions,atc2609a-dcdc";
				regulator-name = "dcdc0";
				regulator-min-microvolt = <600000>;
				regulator-max-microvolt = <1300000>;
				regulator-always-on;
			};

			dcdc1: dcdc1 {
				compatible = "actions,atc2609a-dcdc1","actions,atc2609a-dcdc";
				regulator-name = "dcdc1";
				regulator-min-microvolt = <600000>;
				regulator-max-microvolt = <1300000>;
				regulator-always-on;
			};

			dcdc2: dcdc2 {
				compatible = "actions,atc2609a-dcdc2","actions,atc2609a-dcdc";
				regulator-name = "dcdc2";
				regulator-min-microvolt = <600000>;
				regulator-max-microvolt = <1350000>;
				regulator-always-on;
			};

			dcdc3: dcdc3 {
				compatible = "actions,atc2609a-dcdc3","actions,atc2609a-dcdc";
				regulator-name = "dcdc3";
				regulator-min-microvolt = <600000>;
				regulator-max-microvolt = <3500000>;
				regulator-always-on;
			};

			dcdc4: dcdc4 {
				compatible = "actions,atc2609a-dcdc4","actions,atc2609a-dcdc";
				regulator-name = "dcdc4";
				regulator-min-microvolt = <600000>;
				regulator-max-microvolt = <1300000>;
				regulator-always-on;
			};

			/* LDO0        SD_VCC     
			 * LDO1        SENS_AVDD  
			 * LDO2        AVCC       
			 * LDO3        ATC2609_VDD   
			 * LDO4        AVCC_1V8   
			 * LDO6        AVDD_1V0   
			 * LDO7        SENS_DVDD  
			 * LDO8        TP_VCC     
			 * LDO9        RTC_VDD     */

			ldo0: ldo0{
				compatible = "actions,atc2609a-ldo0","actions,atc2609a-ldo";
				regulator-name = "ldo0";
				regulator-min-microvolt  = <2300000>;
				regulator-max-microvolt = <3400000>;
				regulator-always-on;
			};

			ldo1: ldo1{
				compatible = "actions,atc2609a-ldo1","actions,atc2609a-ldo";
				regulator-name = "ldo1";
				regulator-min-microvolt  = <2300000>;
				regulator-max-microvolt = <3400000>;
			};

			ldo2: ldo2{
				compatible = "actions,atc2609a-ldo2","actions,atc2609a-ldo";
				regulator-name = "ldo2";
				regulator-min-microvolt  = <2300000>;
				regulator-max-microvolt = <3400000>;
				regulator-always-on;
			};

			ldo3: ldo3{
				compatible = "actions,atc2609a-ldo3","actions,atc2609a-ldo";
				regulator-name = "ldo3";
				regulator-min-microvolt  = <700000>;
				regulator-max-microvolt = <2200000>;
				regulator-always-on;
			};

			ldo4: ldo4{
				compatible = "actions,atc2609a-ldo4","actions,atc2609a-ldo";
				regulator-name = "ldo4";
				regulator-min-microvolt  = <700000>;
				regulator-max-microvolt = <2200000>;
				regulator-always-on;
			};

			ldo6: ldo6{
				compatible = "actions,atc2609a-ldo6","actions,atc2609a-ldo";
				regulator-name = "ldo6";
				regulator-min-microvolt  = <850000>;
				regulator-max-microvolt = <2200000>;
				regulator-always-on;
			};

			ldo7: ldo7{
				compatible = "actions,atc2609a-ldo7","actions,atc2609a-ldo";
				regulator-name = "ldo7";
				regulator-min-microvolt  = <700000>;
				regulator-max-microvolt = <2200000>;
			};

			ldo8: ldo8{
				compatible = "actions,atc2609a-ldo8","actions,atc2609a-ldo";
				regulator-name = "ldo8";
				regulator-min-microvolt  = <2100000>;
				regulator-max-microvolt = <3300000>;
			};

			ldo9: ldo9{
				compatible = "actions,atc2609a-ldo9","actions,atc2609a-ldo";
				regulator-name = "ldo9";
				regulator-min-microvolt  = <2600000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};
		};
	};
	gpiokeys {
		compatible = "gpio-keys-polled";
		poll-interval = <20>;

		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_gpio_lvds_e>;

		3dmode {
			gpios = <&gpioa 2 0>; /* GPIOA2 */
			keycode = <249>;
			label = "3dmode";
		};
		volumeup {
			gpios = <&gpioa 7 0>; /* GPIOA9 */
			keycode = <115>;    /*KEY_VOLUMEUP*/
			label = "volumeup";
		};

		volumedown {
			gpios = <&gpioa 8 0>; /* GPIOA8 */
			keycode = <114>;    /*KEY_VOLUMEDOWN*/
			label = "volumedown";
		};

		back {
			gpios = <&gpioa 9 0>; /* GPIOA7 */
			keycode = <158>;
			label = "back";
		};
	};

	i2c4: i2c@e0178000 {
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_i2c4>;
		status = "okay";

		synaptics_i2c@0b {
			compatible = "synaptics_i2c";
			reg = <0x0b>;
			tp_vcc = "ldo8";
			interrupt-parent = <&sirq>;
			interrupts = <0 0x4>;
			vol_range = <3100000 3110000>;
		};
	};
	
	i2c5: i2c@e017a000 {
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_i2c5>;
		status = "okay";
		bq27441-battery@55 {
			compatible = "ti,bq27441-battery";
			reg = <0x55>;
			r_table = <99 99 86 83 82 81 84 86 82 82 96 105 92 86 81>;
			rsense = <10>;
			taper_cur = <150>;
			sleep_current = <14>;
			design_capacity = <3000>;
			term_vol = <3400>;
			taper_vol = <4300>;
			board_offset = <11>;
			cc_gain = <0x7e12aae2>;
			cc_delta = <0x9226d6c2>;
			log_switch = <0>;
		};
	};

	serial3: uart@e0126000 {
		dmas = <&dma DMA_DRQ_UART3_TX>, <&dma DMA_DRQ_UART3_RX>;
		dma-names = "tx", "rx";
		status = "okay";
	};

	edp: edp@e02e0000 {
		status = "disabled";
	};

	bluetooth_state_default:bluetooth_default {
		sgpio_pull {
			actions,pins = "P_SGPIO2";
			actions,pull = <2>;
		};
	};

	wifi_bt_power_ctl {
		compatible = "wifi,bt,power,ctl";
		wifi_bt_power_gpios = <&gpiod 9 0>; /*  GPIOd9 */
		bt_en_gpios = <&gpiod 5 0>;/*GPIOd5, high active*/  /*M3305 A17 reset pin*/
		bt_wake_gpio = <&gpiod 1 0>; /* GPIOd1*/
		wifi_en_gpios = <&gpiod 6 0>; /* GPIOd6*/
		wifi_wakeup_host_gpios = <&gpiod 0 0>; /* GPIOD0 */
		reg_wl_bt_vddio = "ldo7";
		wifi_bt_vddio_vol_range = <1800000 1810000>;
		pinctrl-names = "default";
		pinctrl-0 = <&bluetooth_state_default >;
	};

	hdmi@e0250000 {
		tmds-avdd-supply = <&ldo4>;

		hdcp_onoff = <0>;
		channel_invert = <0>;
		bit_invert = <0>;

		panel_ghp: hdmi_panel {
			compatible = "actions,panel-ghp";

			is_primary = <1>;

			draw_width = <2560>;
			draw_height = <1024>;

			videomode-0 = <&default_mode>;

			/* default mode used when EDID read error */
			default_mode: videomode {
				refresh_rate = <60>;

				xres = <2560>;
				yres = <1024>;
			};

		};
	};

	monitor {
		compatible = "actions,s900-usbmonitor";
		detect_type = <3>; /* config what to detect, 0:DISABLE ; 1:DEVICE_ONLY; 2:HOST_ONLY; 3: HOST_AND_DEVICE*/
		idpin_type   = <0>; /* 0:use ic's idpin;      1:soft idpin,##no support!##;       2:gpio idpin,use gpio to detect,need to add a "idpin_gpio" configuration */
		vbus_type   = <2>; /* 0:use ic's vbuspin; 1:gpio vbus,##no support!## ;      2:use dc5v to detect vbus level*/

		/*vbus_otg_en_gpio is use to turn on/off otg vbus,it's different from vbus detect gpio;*/
		vbus_otg_en_gpios = <&gpioa 5 0>;  /* GPIOA5,  1: low active; 0: high active */
		status = "okay";
	};

	owl_usb_config {
		compatible = "actions,owl-usb-config";
		usb_serialnumber_config = <1>; /* config serialnumber string format, 0: fixed serial no in ascii format; 1: fixed serial no in unicode format; 2:non-fixed serial no in unicode format*/
		usb_hs_output_strength = <3>; /*defaut:3,range:0~7; 0:min,7:max;usb high speed(2.0)transmitter output strength*/
		status = "okay";
	};

 	usb2h0: usb@e02b0000 {
		port_host_plug_detect = <2>;
		status = "okay";
	};

	usb2h1: usb@e02c0000 {
		status = "disabled";
	};

	gpu@e0600000 {
		gpu-supply = <&eta355c>;

		operating-points = <352000  875000
		                    528000 1000000>;
	};
};
